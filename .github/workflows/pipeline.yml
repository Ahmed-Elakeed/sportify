name: Build, Dockerize, and Deploy to AWS Fargate

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1                 # Specify your AWS region
  ECR_REPOSITORY: sportify-repo          # Replace with your ECR repository name
  IMAGE_TAG: ${{ github.sha }}
  CLUSTER_NAME: sportify-cluster      # Replace with your ECS cluster name
  SERVICE_NAME: sportify-service       # Replace with your ECS Fargate service name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set default.region $AWS_REGION
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t sportify-app:latest .
          docker tag sportify-app:latest public.ecr.aws/b9v4v3r1/sportify-app:latest

      - name: Push Docker image to ECR
        run: |
          # docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push public.ecr.aws/b9v4v3r1/sportify-app:latest

      # - name: Deploy to AWS Fargate
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: |
      #     aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $AWS_REGION
