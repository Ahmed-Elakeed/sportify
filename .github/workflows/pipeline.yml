name: CI/CD Pipeline with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Build and Test with Maven
        run: |
          ./mvnw clean install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image to ECR
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Specify the ECR repo URI and the image tag (using GitHub SHA)
          IMAGE_URI=${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

          # Build the Spring Boot app container only (ignoring MySQL) and tag it
          docker-compose -f docker-compose.yml build app

          # Tag the app image for ECR
          docker tag sportify-app:latest $IMAGE_URI

          # Push the app image to ECR
          docker push $IMAGE_URI

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Fargate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service \
            --cluster sportify \
            --service sportify-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
