name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sportify

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and test
        run: |
          ./mvnw clean install

  dockerize:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE }} .

      - name: Tag Docker image
        run: |
          docker tag ${{ secrets.DOCKER_IMAGE }} ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Push to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

  deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Fargate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service \
            --cluster sportify \
            --service sportify-service \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
