name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Only run on pushes to the main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (or the version you need)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build and test the project
      - name: Build and test
        run: |
          ./mvnw clean install

  dockerize:
    needs: build  # Runs after the build job
    runs-on: ubuntu-latest
    steps:
      # Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE }} .
        
      # Tag Docker image
      - name: Tag Docker image
        run: |
          docker tag ${{ secrets.DOCKER_IMAGE }} ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      # Push Docker image to ECR
      - name: Push to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

  deploy:
    needs: dockerize  # Runs after dockerize job
    runs-on: ubuntu-latest
    steps:
      # Deploy using AWS CLI
      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service --cluster your-cluster-name --service your-service-name \
            --force-new-deployment --region ${{ secrets.AWS_REGION }}
